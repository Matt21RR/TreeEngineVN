class canvasInstances {
  static loader(hardcodedId, dynamicId){
    //Every canvas will have a internal hard-coded id
    //and a dynamic id generated by Canvas element
    //the dynamic id will be storaged in a object of IDS
    if(window.canvasInstances == undefined)
      window.canvasInstances = new Object();
    
    if(window.canvasInstances[hardcodedId] == undefined)
      Object.assign(window.canvasInstances,{[hardcodedId]:null});
    
    window.canvasInstances[hardcodedId] = dynamicId;

    window.finalWarn = 0;
    console.log(window.canvasInstances);
  }
  static checker(hardcodedId, dynamicId){ 
    const tPrev = window.scafford;
    window.scafford = window.performance.now();

    var res = window.canvasInstances[hardcodedId] == undefined? false : window.canvasInstances[hardcodedId] == dynamicId;
    if(tPrev != undefined){
       //console.log(window.canvasInstances[hardcodedId],window.scafford-tPrev);
      if(window.scafford-tPrev<6)
        if(window.finalWarn>3){
          res = false;
          window.finalWarn = 0;
        }else{
          window.finalWarn++;
        }
        
    }
    // console.log(res) 
    if(!res)console.warn("refusing engine start from prebult canvas")
    return res;
  }    
}
export{canvasInstances}