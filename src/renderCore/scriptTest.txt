
SCENE ID mapa

new TEXTURES [
  "mapa",
  "tienda",
  "restaurante",
  "correo"
]

new GRAPHOBJECT mapa {
  texture:"mapa",
  brightness:1,
  scale:1
}

new GRAPHOBJECT tienda {
  texture:"tienda",
  scale:0.1,
  left:.45,
  top:.18
}
new GRAPHOBJECT restaurante {
  texture:"restaurante",
  scale:0.1,
  left:.56,
  top:.75
}
new GRAPHOBJECT correo {
  texture:"correo",
  scale:0.1,
  left:.08,
  top:.27
}
new TRIGGER entrarCorreo { 
  relatedTo:"correo",
  enabled:true,
  onRelease:(engine)=>{
    engine.loadScene("oficinaPostal");
  }
} 
new TRIGGER entrarTienda {
  relatedTo:"tienda",
  onRelease:(engine)=>{
    engine.loadScene("testScene");
  }
}
new ANIMATION test {
  relatedTo:"mapa",
  keyframes:{
    0:{blur:0,brightness:0},
    4000:{blur:7,brightness:4},
    6000:{blur:0,brightness:0}
  },
  enabled:true,
  infinite:true
}
new ANIMATION test1 {
  relatedTo:"mapa",
  keyframes:{
    0:{left:-.002,top:.002,scale:1},
    500:{left:.002,top:-.001,scale:1.0025},
    1000:{left:.001,top:-.002,scale:1.005},
    1500:{left:-.001,top:.001,scale:1.0025},
    2000:{left:-.002,top:.002,scale:1}
  },
  enabled:true,
  infinite:true
}

new GRAPHOBJECT editButton {
    text:"Drag n Drop",
    fontSize:20,
    color: "white",
    boxColor: "red",
    top:0.08,
    left:0.9,
    scale:0.1,
    widthScale:1,
    heightScale:.5,
  }

new TRIGGER tDebug2 {
  relatedTo:"display",
  mouseMove:(engine,gObject)=>{
      if(gObject.id != engine.gameVars.targetedObject){
        engine.consolClean();
      }else{return;}
      engine.objectToDebug = gObject.id;
      engine.gameVars.targetedObject = gObject.id;

      Object.keys(gObject.dump()).filter(e=>{return gObject[e] != 0}).forEach((element,index) => {
        engine.consol(element +" : "+gObject[element]);
      });
  }
}

new GRAPHOBJECT graphDumpButton {
    text:"Listar Información",
    fontSize:20,
    color: "white",
    boxColor: "red",
    top:0.14,
    left:0.9,
    scale:0.1,
    widthScale:1,
    heightScale:.5,
  }

new GRAPHOBJECT deleteDumpButton {
    text:"Borrar consola",
    fontSize:20,
    color: "white",
    boxColor: "red",
    top:0.20,
    left:0.9,
    scale:0.1,
    widthScale:1,
    heightScale:.5,
  }

new TRIGGER dDump {
  relatedTo:"deleteDumpButton",
  onRelease:(engine)=>{
    engine.consolClean();
  }
}

new TRIGGER tDebug {
  relatedTo:"graphDumpButton",
  onRelease:(engine)=>{
    engine.consolClean();
    engine.consol("TEXTURES","green");
    engine.texturesList.ids().forEach((e)=>{engine.consol("->"+e)});
    engine.consol("GRAPHOBJECTS","green");
    engine.graphArray._objects.forEach((e)=>{engine.consol("->"+e.id+"("+e.left+","+e.top+")")});
    engine.consol("TRIGGERS","green");
    engine.triggers._objects.forEach((e)=>{engine.consol("->"+e.id+"(relatedTo: "+e.relatedTo+")")});
    engine.consol("ANIMATIONS","green");
    engine.anims._objects.forEach((e)=>{engine.consol("->"+e.id+"(relatedTo: "+e.relatedTo+")")});
  }
}

//*==================================ESCENA DE LA TIENDA==============================
SCENE ID testScene

new GAMEVARS {
  peras:4,
  precioPeras:1500,
  puertaAbierta:false,
  productos:{pera:0}
}

new TEXTURES [
  "aishaImg",
  "background",
  "parsel1",

  "pera",
  "arroz",
  "agua",
  "frijol",
  "res",
  "pescado",

  "carrito",
  "tiendaAviso",
  "puertaCerrada",
  "puertaAbierta"
]

new SOUNDS [
  "cierrePuerta",
  "aperturaPuerta"
]
new GRAPHOBJECT parsel {
  texture:"parsel1",
  scale:1,
  z:1
}
new GRAPHOBJECT back {
    texture:"background",
    top:0,
    left:0,
    scale:1,
    z:4,
  }
new GRAPHOBJECT tiendaAviso {
  texture:"tiendaAviso",
  scale:0.5,
  left:0.1
}
new GRAPHOBJECT puerta {
  texture:"puertaCerrada",
  scale:0.15,
  top:0.3
}
new TRIGGER tPuerta {
  relatedTo:"puerta",
  onLeave:(engine,gObject)=>{
    if($puertaAbierta){
      gObject.textureName = "puertaCerrada";
      $puertaAbierta = false;
      engine.soundsList.get("cierrePuerta").sound.play();
    }
  },
  onEnter:(engine,gObject)=>{
    if(!$puertaAbierta){
      gObject.textureName = "puertaAbierta";
      $puertaAbierta = true;
      engine.soundsList.get("aperturaPuerta").sound.play();
    }
  },
  onRelease:(engine)=>{engine.loadScene("mapa");}
}

new GRAPHOBJECT carrito {
  texture:"carrito",
  opacity:1,
  scale:0.14,
  top:0.8,
  left:.15,
  z:3}

new GRAPHOBJECT textInnerCommandsButton {
  text:"Test basic 3D",
  fontSize:20,
  color: "white",
  boxColor: "red",
  top:0.2,
  left:0.9,
  scale:0.1,
  widthScale:1,
  heightScale:.5
}
new GRAPHOBJECT textRecibo {
  text:$("Tienes en tu carrito:"
  +
  Object.keys($productos).map((e,key)=>{return 
      "\n"+e+": \t"+$productos[e]
    }) 
  )$,
  fontSize:20,
  color: "white",
  boxColor: "red",
  top:0.85,
  left:0.7,
  scale:0.2,
  widthScale:1.4,
  heightScale:.65,
}
//*Triggers

//3D TRIGGER
new TRIGGER triggerId {
  relatedTo:"textInnerCommandsButton",
  onRelease:(engine)=>{
    SET CAMERA {to:{usePerspective:true}}
    SET TRIGGER triggerId {enabled:false}
    SET GRAPHOBJECT back {z:4,scale:2,top:-.5,left:-.5}
    document.body.addEventListener("keydown",function(e){
      switch(e.key){
        case "w":
          engine.camera.origin.y += 0.00001;
          break;
        case "s":
          engine.camera.origin.y -= 0.00001;
          break;
        case "d":
          engine.camera.origin.x -= 0.00001;
          break;
        case "a":
          engine.camera.origin.x += 0.00001;
          break;
      }
      });
  }
}
//Trigger que aumenta la cantidad de peras
new GRAPHOBJECT pera {
  texture:"pera",
  scale:0.06,
  top:.4,
  left:.7}
new GRAPHOBJECT arroz {
  texture:"arroz",
  scale:0.06,
  top:0.85,
  left:.15}
new GRAPHOBJECT agua {
  texture:"agua",
  scale:0.06,
  top:0.85,
  left:.15}
new GRAPHOBJECT frijol {
  texture:"frijol",
  scale:0.06,
  top:0.85,
  left:.15}
new GRAPHOBJECT {
  id:"res",
  texture:"res",
  scale:0.06,
  top:0.85,
  left:.15}
new GRAPHOBJECT {
  id:"pescado",
  texture:"pescado",
  scale:0.06,
  top:0.85,
  left:.15}

new TRIGGER {
  id:"aumentoProducto",
  relatedTo:"pera",
  onRelease:(engine)=>{
    $productoAMover = 'pera';
    console.log("Trying to enable a animation");
    SET ANIMATION a1 {enabled:true,relatedTo:$productoAMover}
    }
}
//Animacion cuando se agrega una pera al carrito
new ANIMATION {
  id:"a1",
  ease:"linear",
  keyframes:{
    500:{
      left:0.8, 
      opacity:.01,
      onComplete:(engine)=>{
        console.warn("Escopeta de feria");
        SET GRAPHOBJECT $productoAMover {left:.15,opacity:1}
        SET ANIMATION a1 {done:false,enabled:false}
        SET ANIMATION meterProducto {enabled:true}
        $productos[$productoAMover]++;
      }
    }
  }
}
//animacion al meter algo al carrito
new ANIMATION {
  relatedTo:"carrito",
  id:"meterProducto",
  duration:300,
  to:{scale:.2},
  loopback:true,
  loops:1,
  onComplete:(engine)=>{
    SET ANIMATION meterProducto {done:false,enabled:false}
  }
}
//*===========================================ESCENA PARA PROBAR LOS TEXTOS=========================================
SCENE ID oficinaPostal

new TEXTURES [
  "aishaImg"]
new SOUNDS [
  "openning"
]
//Nombre de quien está hablando
new GRAPHOBJECT voiceByName {
  text:"Gta",
  fontSize:22,
  boxColor:"black",
  scale:.1,
  color:"white",
  top:.70,
  left:.08,
  heightScale:.7,
  margin:.1,
  z:-2
}
new GRAPHOBJECT dialogbox {
  boxColor:"rgb(20,80,190)",
  color:"white",
  scale:.8,
  heightScale:.25,
  top:.75,
  left:.1,
  fontSize:18,
  text:"",
  margin:.05,
  opacity:0
}

new GRAPHOBJECT botonAvanzarDialogo {
  boxColor:"white",
  color:"black",
  scale:.05,
  text:"Next",
  fontSize:24,
  left:.85,
  top:.9
}
new TRIGGER avanzarDialogo {
  relatedTo:"botonAvanzarDialogo",
  onRelease:(engine)=>{
    engine.graphArray.get("dialogbox").text = "";
    if(engine.dialogNumber+1<engine.dialog.length){
      engine.dialogNumber++;
    }else{
      engine.graphArray.get("dialogbox").opacity = 0;
      engine.continue = true;
      engine.dialogNumber = 0;
    }
  }
}

new GRAPHOBJECT narrationBox {
  boxColor:"rgb(211,103,5)",
  color:"white",
  scale:.7,
  top:.15,
  left:.15,
  fontSize:18,
  text:"",
  margin:.1
}
new GRAPHOBJECT boton {
  boxColor:"white",
  color:"black",
  scale:.1,
  text:"Next",
  fontSize:24,
  left:.8,
  top:.75
}
new TRIGGER avanzarNarracion {
  relatedTo:"boton",
  onRelease:(engine)=>{
    engine.paragraphNumber++;
    
    const tb = engine.narration.split('\n');
    if(engine.paragraphNumber<tb.length){
      engine.paragraph += '\n' + tb[engine.paragraphNumber];
    }else{      
      SET TRIGGER avanzarNarracion {enabled:false}
      SET GRAPHOBJECT narrationBox {opacity:0}
      CONTINUE
      engine.paragraph = "";
      SET GRAPHOBJECT narrationBox {text:""}
      //engine.graphArray.get("narrationBox").text = "";
    }
  }
}
new CODEDROUTINE phantasm {
  code:(engine)=>{
    let text = engine.graphArray.get("narrationBox").text;
    //console.log(engine.paragraph.length);
    if(text.length<engine.paragraph.length){
      engine.graphArray.get("narrationBox").text += engine.paragraph[text.length];
    }
  }
}
new CODEDROUTINE dialog2 {
  code:(engine)=>{
    let text = engine.graphArray.get("dialogbox").text;
    
    if(engine.dialog.length>0)
    if(text.length<engine.dialog[engine.dialogNumber].length){
      engine.graphArray.get("dialogbox").text += engine.dialog[engine.dialogNumber][text.length];
    }
  }
}
//*Significa que a partir de aqui se empieza la ejecucion ciclica
END DECLARATION

SHOW NARRATION [
  "Hello, Mr.White",
  "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
  "Iure est placeat aspernatur obcaecati modi enim ex explicabo, im",
]
//*Cada coma hace las veces de un dialogo siguiente del mismo personaje
SHOW DIALOG Ernie [
  "Rovoronstof",
  "Devorak",
  "Ennard"
]

SHOW DIALOG Adam [
  "Hey",
  "Hola",
  "A todos."
]
WAIT 1500
SHOW DIALOG Ernie [
  "Ya pero",
  "Pero quien ha apagado la luz?"
]
new GRAPHOBJECT titletest{
  scale:1,
  boxColor:"white",
  opacity:0,
  text:"",
  z:1
}
new ANIMATION aTitle {
  relatedTo:"titletest",
  enabled:true,
  keyframes:{
    0:{
      onComplete:(engine)=>{
        engine.soundsList.get("openning").sound.play();
      }
    },4000:{opacity:1,
      onComplete:(engine)=>{
        new GRAPHOBJECT {id:"title",text:"AAAAAAAA",fontSize:100,color:"white",center:true}
      }
    },8000:{
      opacity:0,
      onComplete:(engine)=>{
        engine.continue = true;
        engine.graphArray.remove("title");
        }
      }
  }
}
WAIT

SHOW NARRATION [
  "Lights out. Silence. Except for the sudden thump coming from the other room.",
  "BETH and MIKE are in bed, a young couple. Beth sits up, and switches the lamp on. It's a smallish flat, nice, but cheap, nothing too fancy, old-style TV, no computers."
]

//*Inicia con dolar = operacion que se encapsula en una funcion
//CONTINUE
END FILE